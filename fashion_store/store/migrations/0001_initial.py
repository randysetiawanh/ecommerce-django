# Generated by Django 3.1 on 2022-07-04 10:28

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nameCategory', models.CharField(max_length=50, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nameCustomer', models.CharField(max_length=200, null=True)),
                ('emailCustomer', models.EmailField(max_length=200, unique=True)),
                ('userCustomer', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dateOrder', models.DateTimeField(auto_now_add=True)),
                ('completeOrder', models.BooleanField(default=False)),
                ('transactionOrder', models.CharField(max_length=100, null=True)),
                ('totalOrder', models.FloatField(default=0, null=True)),
                ('totalProductOrder', models.IntegerField(default=0, null=True)),
                ('customerOrder', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='store.customer')),
            ],
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('transactionId', models.CharField(max_length=100, null=True)),
                ('pricePayment', models.FloatField(default=0, null=True)),
                ('statusPayment', models.CharField(max_length=50, null=True)),
                ('methodPayment', models.CharField(max_length=100)),
                ('datePayment', models.DateTimeField(auto_now_add=True)),
                ('completePayment', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Testimonials',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nameTestimonials', models.CharField(max_length=100, null=True)),
                ('imageTestimonials', models.ImageField(default='testimonials/testimonials.png', upload_to='testimonials/')),
                ('messageTestimonials', models.TextField(max_length=200, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='ShippingAddress',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nameShipping', models.CharField(max_length=70)),
                ('addressShipping', models.CharField(max_length=200)),
                ('cityShipping', models.CharField(max_length=100)),
                ('stateShipping', models.CharField(max_length=100)),
                ('zipcodeShipping', models.CharField(max_length=20)),
                ('countryShipping', models.CharField(default='Indonesia', max_length=50)),
                ('phoneShipping', models.CharField(max_length=20)),
                ('emailShipping', models.EmailField(max_length=150)),
                ('dateShipping', models.DateTimeField(auto_now_add=True)),
                ('customerOrder', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='store.customer')),
                ('itemOrdered', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='store.order')),
                ('paymentOrder', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='store.payment')),
            ],
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nameProduct', models.CharField(max_length=50)),
                ('priceProduct', models.FloatField()),
                ('digitalProduct', models.BooleanField(default=False)),
                ('imageProduct', models.ImageField(default='products/640x360.png', upload_to='products/')),
                ('descriptionProduct', models.TextField(default='Description', max_length=1000)),
                ('categoryProduct', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='store.category')),
            ],
        ),
        migrations.CreateModel(
            name='OrderItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantityOrdered', models.IntegerField(blank=True, default=0, null=True)),
                ('dateOrdered', models.DateTimeField(auto_now_add=True)),
                ('itemOrdered', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='store.order')),
                ('productOrdered', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='store.product')),
            ],
        ),
        migrations.CreateModel(
            name='OrderSummary',
            fields=[
            ],
            options={
                'verbose_name': 'Order Summary',
                'verbose_name_plural': 'Order Summary',
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('store.shippingaddress',),
        ),
    ]
